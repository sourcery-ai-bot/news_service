version: '3.8'

services:
  db:
    image: postgres:14.8-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:?err} -d ${POSTGRES_DB:?err}" ]
      timeout: 10s
      interval: 1s
      retries: 10

  web:
    build:
      context: ./news_api
      dockerfile: ./Dockerfile
    restart: always
    env_file:
      - ./.env
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      db:
        condition: service_healthy
    command: ["gunicorn", "news_api.wsgi:application", "--bind", "0:8000" ]

  nginx:
    image: nginx:1.24-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      web:
        condition: service_started

volumes:
  postgres_data:
  static_value:
  media_value: